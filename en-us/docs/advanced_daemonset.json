{
  "filename": "advanced_daemonset.md",
  "__html": "<h1 id=\"advanced-daemonset\">Advanced DaemonSet <a class=\"header-anchor\" href=\"#advanced-daemonset\">#</a></h1>\n<p>This controller enhances the rolling update workflow of default <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/\">DaemonSet</a>\ncontroller from aspects, such as partition, selector, pause and surging strategies.</p>\n<p>Note that Advanced DaemonSet extends the same CRD schema of default DaemonSet with newly added fields.\nThe CRD kind name is still <code>DaemonSet</code>.\nThis is done on purpose so that user can easily migrate workload to the Advanced DaemonSet from the\ndefault DaemonSet. For example, one may simply replace the value of <code>apiVersion</code> in the DaemonSet yaml\nfile from <code>apps/v1</code> to <code>apps.kruise.io/v1alpha1</code> after installing Kruise manager.</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-bullet\">-</span>  <span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps/v1</span>\n<span class=\"hljs-string\">+</span>  <span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n   <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">DaemonSet</span>\n   <span class=\"hljs-attr\">metadata:</span>\n     <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sample-ds</span>\n   <span class=\"hljs-attr\">spec:</span>\n     <span class=\"hljs-comment\">#...</span>\n</code></pre>\n<h2 id=\"enhanced-strategies\">Enhanced strategies <a class=\"header-anchor\" href=\"#enhanced-strategies\">#</a></h2>\n<p>These new fields have been added into RollingUpdateDaemonSet:</p>\n<pre><code class=\"language-go\"><span class=\"hljs-keyword\">const</span> (\n+    <span class=\"hljs-comment\">// StandardRollingUpdateType replace the old daemons by new ones using rolling update i.e replace them on each node one after the other.</span>\n+    <span class=\"hljs-comment\">// this is the default type for RollingUpdate.</span>\n+    StandardRollingUpdateType RollingUpdateType = <span class=\"hljs-string\">\"Standard\"</span>\n\n+    <span class=\"hljs-comment\">// SurgingRollingUpdateType replaces the old daemons by new ones using rolling update i.e replace them on each node one</span>\n+    <span class=\"hljs-comment\">// after the other, creating the new pod and then killing the old one.</span>\n+    SurgingRollingUpdateType RollingUpdateType = <span class=\"hljs-string\">\"Surging\"</span>\n)\n\n<span class=\"hljs-comment\">// Spec to control the desired behavior of daemon set rolling update.</span>\n<span class=\"hljs-keyword\">type</span> RollingUpdateDaemonSet <span class=\"hljs-keyword\">struct</span> {\n+    <span class=\"hljs-comment\">// Type is to specify which kind of rollingUpdate.</span>\n+    Type RollingUpdateType <span class=\"hljs-string\">`json:\"rollingUpdateType,omitempty\" protobuf:\"bytes,1,opt,name=rollingUpdateType\"`</span>\n\n    <span class=\"hljs-comment\">// ...</span>\n    MaxUnavailable *intstr.IntOrString <span class=\"hljs-string\">`json:\"maxUnavailable,omitempty\" protobuf:\"bytes,2,opt,name=maxUnavailable\"`</span>\n\n+    <span class=\"hljs-comment\">// A label query over nodes that are managed by the daemon set RollingUpdate.</span>\n+    <span class=\"hljs-comment\">// Must match in order to be controlled.</span>\n+    <span class=\"hljs-comment\">// It must match the node's labels.</span>\n+    Selector *metav1.LabelSelector <span class=\"hljs-string\">`json:\"selector,omitempty\" protobuf:\"bytes,3,opt,name=selector\"`</span>\n\n+    <span class=\"hljs-comment\">// The number of DaemonSet pods remained to be old version.</span>\n+    <span class=\"hljs-comment\">// Default value is 0.</span>\n+    <span class=\"hljs-comment\">// Maximum value is status.DesiredNumberScheduled, which means no pod will be updated.</span>\n+    <span class=\"hljs-comment\">// +optional</span>\n+    Partition *<span class=\"hljs-keyword\">int32</span> <span class=\"hljs-string\">`json:\"partition,omitempty\" protobuf:\"varint,4,opt,name=partition\"`</span>\n\n+    <span class=\"hljs-comment\">// Indicates that the daemon set is paused and will not be processed by the</span>\n+    <span class=\"hljs-comment\">// daemon set controller.</span>\n+    <span class=\"hljs-comment\">// +optional</span>\n+    Paused *<span class=\"hljs-keyword\">bool</span> <span class=\"hljs-string\">`json:\"paused,omitempty\" protobuf:\"varint,5,opt,name=paused\"`</span>\n\n+    <span class=\"hljs-comment\">// ...</span>\n+    MaxSurge *intstr.IntOrString <span class=\"hljs-string\">`json:\"maxSurge,omitempty\" protobuf:\"bytes,7,opt,name=maxSurge\"`</span>\n}\n</code></pre>\n<h3 id=\"type-for-rolling-update\">Type for rolling update <a class=\"header-anchor\" href=\"#type-for-rolling-update\">#</a></h3>\n<p>Advanced DaemonSet has a <code>rollingUpdateType</code> field in <code>spec.updateStrategy.rollingUpdate</code>\nwhich controls the way to rolling update.</p>\n<ul>\n<li><code>Standard</code>: controller will replace the old daemons by new ones using rolling update i.e replace them on each node one after the other.\nIt is the same behavior as default DaemonSet.</li>\n<li><code>Surging</code>: controller will replace the old daemons by new ones using rolling update i.e replace them on each node one\nafter the other, creating the new pod and then killing the old one.</li>\n</ul>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">DaemonSet</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n    <span class=\"hljs-attr\">rollingUpdate:</span>\n      <span class=\"hljs-attr\">rollingUpdateType:</span> <span class=\"hljs-string\">Standard</span>\n</code></pre>\n<h3 id=\"selector-for-rolling-update\">Selector for rolling update <a class=\"header-anchor\" href=\"#selector-for-rolling-update\">#</a></h3>\n<p>It helps users to update Pods on specific nodes whose labels could be matched with the selector.</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">DaemonSet</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n    <span class=\"hljs-attr\">rollingUpdate:</span>\n      <span class=\"hljs-attr\">selector:</span>\n        <span class=\"hljs-attr\">matchLabels:</span>\n          <span class=\"hljs-attr\">nodeType:</span> <span class=\"hljs-string\">canary</span>\n</code></pre>\n<h3 id=\"partition-for-rolling-update\">Partition for rolling update <a class=\"header-anchor\" href=\"#partition-for-rolling-update\">#</a></h3>\n<p>This strategy defines rules for calculating the priority of updating pods.\nPartition is the number of DaemonSet pods that should be remained to be old version.</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">DaemonSet</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n    <span class=\"hljs-attr\">rollingUpdate:</span>\n      <span class=\"hljs-attr\">partition:</span> <span class=\"hljs-number\">10</span>\n</code></pre>\n<h3 id=\"maxsurge-for-rolling-update\">MaxSurge for rolling update <a class=\"header-anchor\" href=\"#maxsurge-for-rolling-update\">#</a></h3>\n<p>MaxSurge is the maximum number of DaemonSet pods that can be scheduled above the desired number of pods during the update.\nOnly when <code>rollingUpdateType=Surging</code>, it works.</p>\n<p>Value can be an absolute number (ex: 5) or a percentage of the total number of DaemonSet pods at the start of the update (ex: 10%).\nThe absolute number is calculated from the percentage by rounding up. This cannot be 0. The default value is 1.</p>\n<p>Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have 2 pods running at any given time.\nThe update starts by starting replacements for at most 30% of those DaemonSet pods.\nOnce the new pods are available it then stops the existing pods before proceeding onto other DaemonSet pods,\nthus ensuring that at most 130% of the desired final number of DaemonSet pods are running at all times during the update.</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">DaemonSet</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">rollingUpdate:</span>\n      <span class=\"hljs-attr\">rollingUpdateType:</span> <span class=\"hljs-string\">Surging</span>\n      <span class=\"hljs-attr\">maxSurge:</span> <span class=\"hljs-number\">30</span><span class=\"hljs-string\">%</span>\n</code></pre>\n<h3 id=\"paused-for-rolling-update\">Paused for rolling update <a class=\"header-anchor\" href=\"#paused-for-rolling-update\">#</a></h3>\n<p><code>paused</code> indicates that Pods updating is paused, controller will not update Pods but just maintain the number of replicas.</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">DaemonSet</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">rollingUpdate:</span>\n      <span class=\"hljs-attr\">paused:</span> <span class=\"hljs-literal\">true</span>\n</code></pre>\n",
  "link": "/en-us/docs/advanced_daemonset.html",
  "meta": {
    "title": "Advanced DaemonSet"
  }
}