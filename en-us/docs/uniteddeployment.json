{
  "filename": "uniteddeployment.md",
  "__html": "<h1 id=\"uniteddeployment\">UnitedDeployment <a class=\"header-anchor\" href=\"#uniteddeployment\">#</a></h1>\n<p>This controller provides a new way to manage pods in multi-domain by using multiple workloads.\nA high level description about this workload can be found in this <a href=\"http://openkruise.io/en-us/blog/blog3.html\">blog post</a>.</p>\n<p>Different domains in one Kubernetes cluster are represented by multiple groups of\nnodes identified by labels. UnitedDeployment controller provisions one type of workload\nfor each group of with corresponding matching <code>NodeSelector</code>, so that\nthe pods created by individual workload will be scheduled to the target domain.</p>\n<p>Each workload managed by UnitedDeployment is called a <code>subset</code>.\nEach domain should at least provide the capacity to run the <code>replicas</code> number of pods.\nCurrently <code>StatefulSet</code>, <code>Advanced StatefulSet</code>, <code>CloneSet</code> and <code>Deployment</code> are the supported workloads.</p>\n<p>API definition: <a href=\"https://github.com/openkruise/kruise/blob/master/apis/apps/v1alpha1/uniteddeployment_types.go\">https://github.com/openkruise/kruise/blob/master/apis/apps/v1alpha1/uniteddeployment_types.go</a></p>\n<p>The below sample yaml presents a UnitedDeployment which manages three StatefulSet instances in three domains.\nThe total number of managed pods is 6.</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">UnitedDeployment</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sample-ud</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">replicas:</span> <span class=\"hljs-number\">6</span>\n  <span class=\"hljs-attr\">revisionHistoryLimit:</span> <span class=\"hljs-number\">10</span>\n  <span class=\"hljs-attr\">selector:</span>\n    <span class=\"hljs-attr\">matchLabels:</span>\n      <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">sample</span>\n  <span class=\"hljs-attr\">template:</span>\n    <span class=\"hljs-comment\"># statefulSetTemplate or advancedStatefulSetTemplate or cloneSetTemplate or deploymentTemplate</span>\n    <span class=\"hljs-attr\">statefulSetTemplate:</span>\n      <span class=\"hljs-attr\">metadata:</span>\n        <span class=\"hljs-attr\">labels:</span>\n          <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">sample</span>\n      <span class=\"hljs-attr\">spec:</span>\n        <span class=\"hljs-attr\">selector:</span>\n          <span class=\"hljs-attr\">matchLabels:</span>\n            <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">sample</span>\n        <span class=\"hljs-attr\">template:</span>\n          <span class=\"hljs-attr\">metadata:</span>\n            <span class=\"hljs-attr\">labels:</span>\n              <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">sample</span>\n          <span class=\"hljs-attr\">spec:</span>\n            <span class=\"hljs-attr\">containers:</span>\n            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">nginx:alpine</span>\n              <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx</span>\n  <span class=\"hljs-attr\">topology:</span>\n    <span class=\"hljs-attr\">subsets:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">subset-a</span>\n      <span class=\"hljs-attr\">nodeSelectorTerm:</span>\n        <span class=\"hljs-attr\">matchExpressions:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">node</span>\n          <span class=\"hljs-attr\">operator:</span> <span class=\"hljs-string\">In</span>\n          <span class=\"hljs-attr\">values:</span>\n          <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">zone-a</span>\n      <span class=\"hljs-attr\">replicas:</span> <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">subset-b</span>\n      <span class=\"hljs-attr\">nodeSelectorTerm:</span>\n        <span class=\"hljs-attr\">matchExpressions:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">node</span>\n          <span class=\"hljs-attr\">operator:</span> <span class=\"hljs-string\">In</span>\n          <span class=\"hljs-attr\">values:</span>\n          <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">zone-b</span>\n      <span class=\"hljs-attr\">replicas:</span> <span class=\"hljs-number\">50</span><span class=\"hljs-string\">%</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">subset-c</span>\n      <span class=\"hljs-attr\">nodeSelectorTerm:</span>\n        <span class=\"hljs-attr\">matchExpressions:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">node</span>\n          <span class=\"hljs-attr\">operator:</span> <span class=\"hljs-string\">In</span>\n          <span class=\"hljs-attr\">values:</span>\n          <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">zone-c</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">manualUpdate:</span>\n      <span class=\"hljs-attr\">partitions:</span>\n        <span class=\"hljs-attr\">subset-a:</span> <span class=\"hljs-number\">0</span>\n        <span class=\"hljs-attr\">subset-b:</span> <span class=\"hljs-number\">0</span>\n        <span class=\"hljs-attr\">subset-c:</span> <span class=\"hljs-number\">0</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">Manual</span>\n<span class=\"hljs-string\">...</span>\n</code></pre>\n<h2 id=\"pod-distribution-management\">Pod Distribution Management <a class=\"header-anchor\" href=\"#pod-distribution-management\">#</a></h2>\n<p>This controller provides <code>spec.topology</code> to describe the pod distribution specification.</p>\n<pre><code class=\"language-go\"><span class=\"hljs-comment\">// Topology defines the spread detail of each subset under UnitedDeployment.</span>\n<span class=\"hljs-comment\">// A UnitedDeployment manages multiple homogeneous workloads which are called subset.</span>\n<span class=\"hljs-comment\">// Each of subsets under the UnitedDeployment is described in Topology.</span>\n<span class=\"hljs-keyword\">type</span> Topology <span class=\"hljs-keyword\">struct</span> {\n    <span class=\"hljs-comment\">// Contains the details of each subset. Each element in this array represents one subset</span>\n    <span class=\"hljs-comment\">// which will be provisioned and managed by UnitedDeployment.</span>\n    <span class=\"hljs-comment\">// +optional</span>\n    Subsets []Subset <span class=\"hljs-string\">`json:\"subsets,omitempty\"`</span>\n}\n\n<span class=\"hljs-comment\">// Subset defines the detail of a subset.</span>\n<span class=\"hljs-keyword\">type</span> Subset <span class=\"hljs-keyword\">struct</span> {\n    <span class=\"hljs-comment\">// Indicates subset name as a DNS_LABEL, which will be used to generate</span>\n    <span class=\"hljs-comment\">// subset workload name prefix in the format '&lt;deployment-name&gt;-&lt;subset-name&gt;-'.</span>\n    <span class=\"hljs-comment\">// Name should be unique between all of the subsets under one UnitedDeployment.</span>\n    Name <span class=\"hljs-keyword\">string</span> <span class=\"hljs-string\">`json:\"name\"`</span>\n\n    <span class=\"hljs-comment\">// Indicates the node selector to form the subset. Depending on the node selector,</span>\n    <span class=\"hljs-comment\">// pods provisioned could be distributed across multiple groups of nodes.</span>\n    <span class=\"hljs-comment\">// A subset's nodeSelectorTerm is not allowed to be updated.</span>\n    <span class=\"hljs-comment\">// +optional</span>\n    NodeSelectorTerm corev1.NodeSelectorTerm <span class=\"hljs-string\">`json:\"nodeSelectorTerm,omitempty\"`</span>\n\n    <span class=\"hljs-comment\">// Indicates the tolerations the pods under this subset have.</span>\n    <span class=\"hljs-comment\">// A subset's tolerations is not allowed to be updated.</span>\n    <span class=\"hljs-comment\">// +optional</span>\n    Tolerations []corev1.Toleration <span class=\"hljs-string\">`json:\"tolerations,omitempty\"`</span>\n\n    <span class=\"hljs-comment\">// Indicates the number of the pod to be created under this subset. Replicas could also be</span>\n    <span class=\"hljs-comment\">// percentage like '10%', which means 10% of UnitedDeployment replicas of pods will be distributed</span>\n    <span class=\"hljs-comment\">// under this subset. If nil, the number of replicas in this subset is determined by controller.</span>\n    <span class=\"hljs-comment\">// Controller will try to keep all the subsets with nil replicas have average pods.</span>\n    <span class=\"hljs-comment\">// +optional</span>\n    Replicas *intstr.IntOrString <span class=\"hljs-string\">`json:\"replicas,omitempty\"`</span>\n}\n</code></pre>\n<p><code>topology.subsets</code> specifies the desired group of <code>subset</code>s.\nA subset added to or removed from this array will be created or deleted by controller during reconcile.\nEach subset workload is created based on the description of UnitedDeployment <code>spec.template</code>.\n<code>subset</code> provides the necessary topology information to create a subset workload.\nEach subset has a unique name.  A subset workload is created with the name prefix in\nformat of <code>&lt;UnitedDeployment-name&gt;-&lt;Subset-name&gt;-</code>. Each subset will also be configured with\nthe <code>nodeSelector</code>.\nWhen provisioning a StatefulSet <code>subset</code>, the <code>nodeSelector</code> will be added\nto the StatefulSet's <code>podTemplate</code>, so that the Pods of the StatefulSet will be created with the\nexpected node affinity.</p>\n<p>By default, UnitedDeployment's Pods are evenly distributed across all subsets.\nThere are two scenarios the controller does not follow this policy:</p>\n<p>The first one is to customize the distribution policy by indicating <code>subset.replicas</code>.\nA valid <code>subset.replicas</code> could be integer to represent a real replicas of pods or\nstring in format of percentage like '40%' to represent a fixed proportion of pods.\nOnce a <code>subset.replicas</code> is given, the controller is going to reconcile to make sure\neach subset has the expected replicas.\nThe subsets with empty <code>subset.replicas</code> will divide the remaining replicas evenly.</p>\n<p>The other scenario is that the indicated subset replicas policy becomes invalid.\nFor example, the UnitedDeployment's <code>spec.replicas</code> is decremented to be less\nthan the sum of all <code>subset.replicas</code>.\nIn this case, the indicated <code>subset.replicas</code> is ineffective and the controller\nwill automatically scale each subset's replicas to match the total replicas number.\nThe controller will try its best to apply this adjustment smoothly.</p>\n<h2 id=\"pod-update-management\">Pod Update Management <a class=\"header-anchor\" href=\"#pod-update-management\">#</a></h2>\n<p>When <code>spec.template</code> is updated, a upgrade progress will be triggered.\nNew template will be patch to each subset workload, which triggers subset controller\nto update their pods.\nFurthermore, if subset workload supports <code>partition</code>, like StatefulSet, AdvancedStatefulSet\nis also able to provide <code>Manual</code> update strategy.</p>\n<pre><code class=\"language-go\"><span class=\"hljs-comment\">// UnitedDeploymentUpdateStrategy defines the update performance</span>\n<span class=\"hljs-comment\">// when template of UnitedDeployment is changed.</span>\n<span class=\"hljs-keyword\">type</span> UnitedDeploymentUpdateStrategy <span class=\"hljs-keyword\">struct</span> {\n    <span class=\"hljs-comment\">// Type of UnitedDeployment update strategy.</span>\n    <span class=\"hljs-comment\">// Default is Manual.</span>\n    <span class=\"hljs-comment\">// +optional</span>\n    Type UpdateStrategyType <span class=\"hljs-string\">`json:\"type,omitempty\"`</span>\n    <span class=\"hljs-comment\">// Includes all of the parameters a Manual update strategy needs.</span>\n    <span class=\"hljs-comment\">// +optional</span>\n    ManualUpdate *ManualUpdate <span class=\"hljs-string\">`json:\"manualUpdate,omitempty\"`</span>\n}\n\n<span class=\"hljs-comment\">// ManualUpdate is a update strategy which allows users to control the update progress</span>\n<span class=\"hljs-comment\">// by providing the partition of each subset.</span>\n<span class=\"hljs-keyword\">type</span> ManualUpdate <span class=\"hljs-keyword\">struct</span> {\n    <span class=\"hljs-comment\">// Indicates number of subset partition.</span>\n    <span class=\"hljs-comment\">// +optional</span>\n    Partitions <span class=\"hljs-keyword\">map</span>[<span class=\"hljs-keyword\">string</span>]<span class=\"hljs-keyword\">int32</span> <span class=\"hljs-string\">`json:\"partitions,omitempty\"`</span>\n}\n</code></pre>\n<p><code>Manual</code> update strategy allows users to control the update progress by indicating\nthe <code>partition</code> of each subset. The controller will pass the <code>partition</code> to each subset.</p>\n",
  "link": "/en-us/docs/uniteddeployment.html",
  "meta": {
    "title": "UnitedDeployment"
  }
}