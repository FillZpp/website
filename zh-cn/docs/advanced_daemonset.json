{
  "filename": "advanced_daemonset.md",
  "__html": "<h1 id=\"advanced-daemonset\">Advanced DaemonSet <a class=\"header-anchor\" href=\"#advanced-daemonset\">#</a></h1>\n<p>这个控制器基于原生 <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/\">DaemonSet</a> 上增强了发布能力，比如 灰度分批、按 Node label 选择、暂停、热升级等。</p>\n<p>注意 <code>Advanced DaemonSet</code> 是一个 CRD，kind 名字也是 <code>DaemonSet</code>，但是 apiVersion 是 <code>apps.kruise.io/v1alpha1</code>。\n这个 CRD 的所有默认字段、默认行为与原生 DaemonSet 完全一致，除此之外还提供了一些 optional 字段来扩展增强的策略。</p>\n<p>因此，用户从原生 <code>DaemonSet</code> 迁移到 <code>Advanced DaemonSet</code>，只需要把 <code>apiVersion</code> 修改后提交即可：</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-bullet\">-</span>  <span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps/v1</span>\n<span class=\"hljs-string\">+</span>  <span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n   <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">DaemonSet</span>\n   <span class=\"hljs-attr\">metadata:</span>\n     <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">sample-ds</span>\n   <span class=\"hljs-attr\">spec:</span>\n     <span class=\"hljs-comment\">#...</span>\n</code></pre>\n<h2 id=\"%E5%A2%9E%E5%BC%BA%E7%AD%96%E7%95%A5\">增强策略 <a class=\"header-anchor\" href=\"#%E5%A2%9E%E5%BC%BA%E7%AD%96%E7%95%A5\">#</a></h2>\n<p>在 RollingUpdateDaemonSet 中我们新增了以下字段：</p>\n<pre><code class=\"language-go\"><span class=\"hljs-keyword\">const</span> (\n+    <span class=\"hljs-comment\">// StandardRollingUpdateType replace the old daemons by new ones using rolling update i.e replace them on each node one after the other.</span>\n+    <span class=\"hljs-comment\">// this is the default type for RollingUpdate.</span>\n+    StandardRollingUpdateType RollingUpdateType = <span class=\"hljs-string\">\"Standard\"</span>\n\n+    <span class=\"hljs-comment\">// SurgingRollingUpdateType replaces the old daemons by new ones using rolling update i.e replace them on each node one</span>\n+    <span class=\"hljs-comment\">// after the other, creating the new pod and then killing the old one.</span>\n+    SurgingRollingUpdateType RollingUpdateType = <span class=\"hljs-string\">\"Surging\"</span>\n)\n\n<span class=\"hljs-comment\">// Spec to control the desired behavior of daemon set rolling update.</span>\n<span class=\"hljs-keyword\">type</span> RollingUpdateDaemonSet <span class=\"hljs-keyword\">struct</span> {\n+    <span class=\"hljs-comment\">// Type is to specify which kind of rollingUpdate.</span>\n+    Type RollingUpdateType <span class=\"hljs-string\">`json:\"rollingUpdateType,omitempty\" protobuf:\"bytes,1,opt,name=rollingUpdateType\"`</span>\n\n    <span class=\"hljs-comment\">// ...</span>\n    MaxUnavailable *intstr.IntOrString <span class=\"hljs-string\">`json:\"maxUnavailable,omitempty\" protobuf:\"bytes,2,opt,name=maxUnavailable\"`</span>\n\n+    <span class=\"hljs-comment\">// A label query over nodes that are managed by the daemon set RollingUpdate.</span>\n+    <span class=\"hljs-comment\">// Must match in order to be controlled.</span>\n+    <span class=\"hljs-comment\">// It must match the node's labels.</span>\n+    Selector *metav1.LabelSelector <span class=\"hljs-string\">`json:\"selector,omitempty\" protobuf:\"bytes,3,opt,name=selector\"`</span>\n\n+    <span class=\"hljs-comment\">// The number of DaemonSet pods remained to be old version.</span>\n+    <span class=\"hljs-comment\">// Default value is 0.</span>\n+    <span class=\"hljs-comment\">// Maximum value is status.DesiredNumberScheduled, which means no pod will be updated.</span>\n+    <span class=\"hljs-comment\">// +optional</span>\n+    Partition *<span class=\"hljs-keyword\">int32</span> <span class=\"hljs-string\">`json:\"partition,omitempty\" protobuf:\"varint,4,opt,name=partition\"`</span>\n\n+    <span class=\"hljs-comment\">// Indicates that the daemon set is paused and will not be processed by the</span>\n+    <span class=\"hljs-comment\">// daemon set controller.</span>\n+    <span class=\"hljs-comment\">// +optional</span>\n+    Paused *<span class=\"hljs-keyword\">bool</span> <span class=\"hljs-string\">`json:\"paused,omitempty\" protobuf:\"varint,5,opt,name=paused\"`</span>\n\n+    <span class=\"hljs-comment\">// ...</span>\n+    MaxSurge *intstr.IntOrString <span class=\"hljs-string\">`json:\"maxSurge,omitempty\" protobuf:\"bytes,7,opt,name=maxSurge\"`</span>\n}\n</code></pre>\n<h3 id=\"%E5%8D%87%E7%BA%A7%E6%96%B9%E5%BC%8F\">升级方式 <a class=\"header-anchor\" href=\"#%E5%8D%87%E7%BA%A7%E6%96%B9%E5%BC%8F\">#</a></h3>\n<p>Advanced DaemonSet 在 <code>spec.updateStrategy.rollingUpdate</code> 中有一个 <code>rollingUpdateType</code> 字段，标识了如何进行滚动升级：</p>\n<ul>\n<li><code>Standard</code>: 对于每个 node，控制器会先删除旧的 daemon Pod，再创建一个新 Pod，和原生 DaemonSet 行为一致。</li>\n<li><code>Surging</code>: 对于每个 node，控制器会先创建一个新 Pod，等它 ready 之后再删除老 Pod。</li>\n</ul>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">DaemonSet</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n    <span class=\"hljs-attr\">rollingUpdate:</span>\n      <span class=\"hljs-attr\">rollingUpdateType:</span> <span class=\"hljs-string\">Standard</span>\n</code></pre>\n<h3 id=\"selector-%E6%A0%87%E7%AD%BE%E9%80%89%E6%8B%A9%E5%8D%87%E7%BA%A7\">Selector 标签选择升级 <a class=\"header-anchor\" href=\"#selector-%E6%A0%87%E7%AD%BE%E9%80%89%E6%8B%A9%E5%8D%87%E7%BA%A7\">#</a></h3>\n<p>这个策略支持用户通过配置 node 标签的 selector，来指定灰度升级某些特定类型 node 上的 Pod。</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">DaemonSet</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n    <span class=\"hljs-attr\">rollingUpdate:</span>\n      <span class=\"hljs-attr\">selector:</span>\n        <span class=\"hljs-attr\">matchLabels:</span>\n          <span class=\"hljs-attr\">nodeType:</span> <span class=\"hljs-string\">canary</span>\n</code></pre>\n<h3 id=\"%E5%88%86%E6%89%B9%E7%81%B0%E5%BA%A6%E5%8D%87%E7%BA%A7\">分批灰度升级 <a class=\"header-anchor\" href=\"#%E5%88%86%E6%89%B9%E7%81%B0%E5%BA%A6%E5%8D%87%E7%BA%A7\">#</a></h3>\n<p>Partition 的语义是 <strong>保留旧版本 Pod 的数量</strong>，默认为 <code>0</code>。\n如果在发布过程中设置了 <code>partition</code>，则控制器只会将 <code>(status.DesiredNumberScheduled - partition)</code> 数量的 Pod 更新到最新版本。</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">DaemonSet</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">RollingUpdate</span>\n    <span class=\"hljs-attr\">rollingUpdate:</span>\n      <span class=\"hljs-attr\">partition:</span> <span class=\"hljs-number\">10</span>\n</code></pre>\n<h3 id=\"%E7%83%AD%E5%8D%87%E7%BA%A7\">热升级 <a class=\"header-anchor\" href=\"#%E7%83%AD%E5%8D%87%E7%BA%A7\">#</a></h3>\n<p>MaxSurge 是 DaemonSet pods 最大扩出来超过预期的数量，只有在 <code>rollingUpdateType=Surging</code> 的时候会生效。</p>\n<p>MaxSurge 可以设置为绝对值或者一个百分比，控制器针对百分比会基于 status.desiredNumberScheduled 做计算并向上取整，默认值为 1。</p>\n<p>比如当设置为 30% 时，最多有总数的 30% 的 node 上会同时有 2 个 Pod 在运行。\n当新 Pod 变为 available 之后控制器会下线老 Pod，然后开始更新下一个 node，在整个过程中所有正常 Pod 数量不会超过总 node 数量的 130%。</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">DaemonSet</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">rollingUpdate:</span>\n      <span class=\"hljs-attr\">rollingUpdateType:</span> <span class=\"hljs-string\">Surging</span>\n      <span class=\"hljs-attr\">maxSurge:</span> <span class=\"hljs-number\">30</span><span class=\"hljs-string\">%</span>\n</code></pre>\n<h3 id=\"%E6%9A%82%E5%81%9C%E5%8D%87%E7%BA%A7\">暂停升级 <a class=\"header-anchor\" href=\"#%E6%9A%82%E5%81%9C%E5%8D%87%E7%BA%A7\">#</a></h3>\n<p>用户可以通过设置 paused 为 true 暂停发布，不过控制器还是会做 replicas 数量管理：</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps.kruise.io/v1alpha1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">DaemonSet</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-comment\"># ...</span>\n  <span class=\"hljs-attr\">updateStrategy:</span>\n    <span class=\"hljs-attr\">rollingUpdate:</span>\n      <span class=\"hljs-attr\">paused:</span> <span class=\"hljs-literal\">true</span>\n</code></pre>\n",
  "link": "/zh-cn/docs/advanced_daemonset.html",
  "meta": {
    "title": "Advanced DaemonSet"
  }
}