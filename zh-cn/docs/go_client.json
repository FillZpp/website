{
  "filename": "go_client.md",
  "__html": "<h1 id=\"golang-client\">Golang client <a class=\"header-anchor\" href=\"#golang-client\">#</a></h1>\n<p>如果要在一个 Golang 项目中对 OpenKruise 的资源做 create/get/update/delete 这些操作、或者通过 informer 做 list-watch，你需要一个支持 OpenKruise 的 client。</p>\n<p>你需要在你的项目中引入 <a href=\"https://github.com/openkruise/kruise-api\">kruise-api</a> 仓库，它包含了 Kruise 的 schema 定义以及 clientset 等工具。</p>\n<p><strong>不要</strong>直接引入整个 <a href=\"https://github.com/openkruise/kruise\">kruise</a> 仓库作为依赖。</p>\n<h2 id=\"%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F\">使用方式 <a class=\"header-anchor\" href=\"#%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F\">#</a></h2>\n<p>首先，在你的 <code>go.mod</code> 中引入 <code>kruise-api</code> 依赖 （版本号最好和你安装的 Kruise 版本相同）：</p>\n<pre><code># 注意如果你代码依赖中 Kubernetes 版本 &gt;= 1.18，那么引入的版本要加 '1.18' 后缀，比如 v0.8.0-1.18\nrequire github.com/openkruise/kruise-api v0.8.0\n</code></pre>\n<p>然后，有两种方式在你的代码中使用 <code>kruise-api</code>：直接使用 或 通过 <code>controller-runtime</code> 使用。</p>\n<p>如果你的项目是通过 <a href=\"https://github.com/kubernetes-sigs/kubebuilder\">kubebuilder</a> 或 <a href=\"https://github.com/operator-framework/operator-sdk\">operator-sdk</a> 生成的，\n那么建议你通过 <code>controller-runtime</code> 使用。否则，你可以直接使用。</p>\n<h3 id=\"%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8\">直接使用 <a class=\"header-anchor\" href=\"#%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8\">#</a></h3>\n<ol>\n<li>New Kruise client using your rest config:</li>\n</ol>\n<pre><code class=\"language-go\"><span class=\"hljs-keyword\">import</span> kruiseclientset <span class=\"hljs-string\">\"github.com/openkruise/kruise-api/client/clientset/versioned\"</span>\n\n<span class=\"hljs-comment\">// cfg is the rest config defined in client-go, you should get it using kubeconfig or serviceaccount</span>\nkruiseClient := kruiseclientset.NewForConfigOrDie(cfg)\n</code></pre>\n<ol start=\"2\">\n<li>Get/List Kruise resources:</li>\n</ol>\n<pre><code class=\"language-go\">cloneSet, err := kruiseClient.AppsV1alpha1().CloneSets(namespace).Get(name, metav1.GetOptions{})\ncloneSetList, err := kruiseClient.AppsV1alpha1().CloneSets(namespace).List(metav1.ListOptions{})\n</code></pre>\n<ol start=\"3\">\n<li>Create/Update Kruise resources:</li>\n</ol>\n<pre><code class=\"language-go\"><span class=\"hljs-keyword\">import</span> kruiseappsv1alpha1 <span class=\"hljs-string\">\"github.com/openkruise/kruise-api/apps/v1alpha1\"</span>\n\ncloneSet := kruiseappsv1alpha1.CloneSet{\n    <span class=\"hljs-comment\">// ...</span>\n}\nerr = kruiseClient.AppsV1alpha1().CloneSets(namespace).Create(&amp;cloneSet, metav1.CreateOptions)\n</code></pre>\n<pre><code class=\"language-go\"><span class=\"hljs-comment\">// Get first</span>\ncloneSet, err := kruiseClient.AppsV1alpha1().CloneSets(namespace).Get(name, metav1.GetOptions{})\n<span class=\"hljs-keyword\">if</span> err != <span class=\"hljs-literal\">nil</span> {\n    <span class=\"hljs-keyword\">return</span> err\n}\n\n<span class=\"hljs-comment\">// Modify object, such as replicas or template</span>\ncloneSet.Spec.Replicas = utilpointer.Int32Ptr(<span class=\"hljs-number\">5</span>)\n\n<span class=\"hljs-comment\">// Update</span>\n<span class=\"hljs-comment\">// This might get conflict, should retry it</span>\n<span class=\"hljs-keyword\">if</span> err = kruiseClient.AppsV1alpha1().CloneSets(namespace).Update(&amp;cloneSet, metav1.UpdateOptions); err != <span class=\"hljs-literal\">nil</span> {\n    <span class=\"hljs-keyword\">return</span> err\n}\n</code></pre>\n<ol start=\"4\">\n<li>Watch Kruise resources:</li>\n</ol>\n<pre><code class=\"language-go\"><span class=\"hljs-keyword\">import</span> kruiseinformer <span class=\"hljs-string\">\"github.com/openkruise/kruise-api/client/informers/externalversions\"</span>\n\nkruiseInformerFactory := kruiseinformer.NewSharedInformerFactory(kruiseClient, <span class=\"hljs-number\">0</span>)\nkruiseInformerFactory.Apps().V1alpha1().CloneSets().Informer().AddEventHandler(...)\nkruiseInformerFactory.Start(...)\n</code></pre>\n<h3 id=\"%E9%80%9A%E8%BF%87-controller-runtime-%E4%BD%BF%E7%94%A8\">通过 controller-runtime 使用 <a class=\"header-anchor\" href=\"#%E9%80%9A%E8%BF%87-controller-runtime-%E4%BD%BF%E7%94%A8\">#</a></h3>\n<ol>\n<li>Add kruise apis into the scheme in your <code>main.go</code></li>\n</ol>\n<pre><code class=\"language-go\"><span class=\"hljs-keyword\">import</span> kruiseapi <span class=\"hljs-string\">\"github.com/openkruise/kruise-api\"</span>\n\n<span class=\"hljs-comment\">// ...</span>\n_ = kruiseapi.AddToScheme(scheme)\n</code></pre>\n<ol start=\"2\">\n<li>New client</li>\n</ol>\n<p>This is needed when use controller-runtime client directly.</p>\n<p>If your project is generated by <a href=\"https://github.com/kubernetes-sigs/kubebuilder\">kubebuilder</a> or <a href=\"https://github.com/operator-framework/operator-sdk\">operator-sdk</a>,\nyou should get the client from <code>mgr.GetClient()</code> instead of the example below.</p>\n<pre><code class=\"language-go\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"sigs.k8s.io/controller-runtime/pkg/client\"</span>\n\napiClient, err := client.New(c, client.Options{Scheme: scheme})\n</code></pre>\n<ol start=\"3\">\n<li>Get/List</li>\n</ol>\n<pre><code class=\"language-go\"><span class=\"hljs-keyword\">import</span> (\n    kruiseappsv1alpha1 <span class=\"hljs-string\">\"github.com/openkruise/kruise-api/apps/v1alpha1\"</span>\n    <span class=\"hljs-string\">\"sigs.k8s.io/controller-runtime/pkg/client\"</span>\n)\n\ncloneSet := kruiseappsv1alpha1.CloneSet{}\nerr = apiClient.Get(context.TODO(), types.NamespacedName{Namespace: namespace, Name: name}, &amp;cloneSet)\n\ncloneSetList := kruiseappsv1alpha1.CloneSetList{}\nerr = apiClient.List(context.TODO(), &amp;cloneSetList, client.InNamespace(instance.Namespace))\n</code></pre>\n<ol start=\"4\">\n<li>Create/Update/Delete</li>\n</ol>\n<p>Create a new CloneSet:</p>\n<pre><code class=\"language-go\"><span class=\"hljs-keyword\">import</span> kruiseappsv1alpha1 <span class=\"hljs-string\">\"github.com/openkruise/kruise-api/apps/v1alpha1\"</span>\n\ncloneSet := kruiseappsv1alpha1.CloneSet{\n    <span class=\"hljs-comment\">// ...</span>\n}\nerr = apiClient.Create(context.TODO(), &amp;cloneSet)\n</code></pre>\n<p>Update an existing CloneSet:</p>\n<pre><code class=\"language-go\"><span class=\"hljs-keyword\">import</span> kruiseappsv1alpha1 <span class=\"hljs-string\">\"github.com/openkruise/kruise-api/apps/v1alpha1\"</span>\n\n<span class=\"hljs-comment\">// Get first</span>\ncloneSet := kruiseappsv1alpha1.CloneSet{}\n<span class=\"hljs-keyword\">if</span> err = apiClient.Get(context.TODO(), types.NamespacedName{Namespace: namespace, Name: name}, &amp;cloneSet); err != <span class=\"hljs-literal\">nil</span> {\n    <span class=\"hljs-keyword\">return</span> err\n}\n\n<span class=\"hljs-comment\">// Modify object, such as replicas or template</span>\ncloneSet.Spec.Replicas = utilpointer.Int32Ptr(<span class=\"hljs-number\">5</span>)\n\n<span class=\"hljs-comment\">// Update</span>\n<span class=\"hljs-comment\">// This might get conflict, should retry it</span>\n<span class=\"hljs-keyword\">if</span> err = apiClient.Update(context.TODO(), &amp;cloneSet); err != <span class=\"hljs-literal\">nil</span> {\n    <span class=\"hljs-keyword\">return</span> err\n}\n</code></pre>\n<ol start=\"5\">\n<li>List watch and informer</li>\n</ol>\n<p>If your project is generated by <a href=\"https://github.com/kubernetes-sigs/kubebuilder\">kubebuilder</a> or <a href=\"https://github.com/operator-framework/operator-sdk\">operator-sdk</a> and get the client from <code>mgr.GetClient()</code>,\nthen methods like <code>Get</code>/<code>List</code> have already queried from informer instead of apiserver.</p>\n",
  "link": "/zh-cn/docs/go_client.html",
  "meta": {
    "title": "Golang 客户端"
  }
}